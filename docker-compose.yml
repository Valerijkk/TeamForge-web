services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=teamforge
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # переменные подхватит Config в backend/config.py
      - POSTGRES_DB=teamforge
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    volumes:
      - ./backend/uploads:/app/backend/uploads     # сохраняем файлы наружу
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/healthz"]
      interval: 30s
      timeout: 5s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: frontend
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - REACT_APP_API_URL=http://backend:5000
    ports:
      - "3000:80"

volumes:
  postgres_data:
